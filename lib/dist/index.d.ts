import { Reactive } from "./lampjs";
export declare const exportObj: {
    createElement: (tag: string | import("./types").ComponentFactory, attrs: import("./types").ComponentAttributes, ...children: import("./types").ComponentChild[]) => JSX.Element;
    mount: (root: HTMLElement | null, el: JSX.Element | JSX.Element[]) => void;
    createState: <T>(value: T) => (newState?: T | ((val: T) => T) | undefined) => Reactive<T>;
    createEffect: <T_1 extends Reactive<any>>(cb: () => void, deps: T_1[]) => void;
    Fragment: ({ children }: {
        children: import("./types").ComponentChild;
    }) => import("./types").ComponentChild;
    onPageMount: (cb: () => void) => void;
    reactive: <T_2 extends readonly Reactive<any>[]>(fn: (...val: { [K in keyof T_2]: T_2[K] extends Reactive<infer U> ? U : never; }) => JSX.Element | null, states: T_2) => JSX.Element | null;
    Router: ({ routes }: {
        routes: {
            path: string;
            element: JSX.Element;
        }[];
    }) => JSX.Element | null;
    Link: ({ children, href }: {
        children: import("./types").ComponentChild;
        href: string;
    }) => JSX.Element;
    For: <T_3>({ each, children, ...others }: {
        each: Reactive<T_3[]>;
        children: (item: T_3, index: number) => import("./types").ComponentChild;
    } & {
        pattern?: string | undefined;
        title?: string | undefined;
        content?: string | undefined;
        height?: string | number | undefined;
        width?: string | number | undefined;
        href?: string | undefined;
        accept?: string | undefined;
        acceptCharset?: string | undefined;
        accessKey?: string | undefined;
        action?: string | undefined;
        allowFullScreen?: boolean | undefined;
        allowTransparency?: boolean | undefined;
        alt?: string | undefined;
        as?: string | undefined;
        async?: boolean | undefined;
        autocomplete?: string | undefined;
        autoComplete?: string | undefined;
        autocorrect?: string | undefined;
        autoCorrect?: string | undefined;
        autofocus?: boolean | undefined;
        autoFocus?: boolean | undefined;
        autoPlay?: boolean | undefined;
        capture?: string | boolean | undefined;
        cellPadding?: string | number | undefined;
        cellSpacing?: string | number | undefined;
        charSet?: string | undefined;
        challenge?: string | undefined;
        checked?: boolean | Reactive<any> | undefined;
        class?: string | undefined;
        cols?: number | undefined;
        colSpan?: number | undefined;
        contentEditable?: boolean | undefined;
        contextMenu?: string | undefined;
        controls?: boolean | undefined;
        controlsList?: string | undefined;
        coords?: string | undefined;
        crossOrigin?: string | undefined;
        data?: string | undefined;
        dateTime?: string | undefined;
        default?: boolean | undefined;
        defer?: boolean | undefined;
        dir?: "auto" | "rtl" | "ltr" | undefined;
        disabled?: boolean | Reactive<any> | undefined;
        disableRemotePlayback?: boolean | undefined;
        download?: string | undefined;
        draggable?: boolean | undefined;
        encType?: string | undefined;
        form?: string | undefined;
        formAction?: string | undefined;
        formEncType?: string | undefined;
        formMethod?: string | undefined;
        formNoValidate?: boolean | undefined;
        formTarget?: string | undefined;
        frameBorder?: string | number | undefined;
        headers?: string | undefined;
        hidden?: boolean | undefined;
        high?: number | undefined;
        ref?: Reactive<any> | undefined;
        hrefLang?: string | undefined;
        for?: string | undefined;
        htmlFor?: string | undefined;
        httpEquiv?: string | undefined;
        icon?: string | undefined;
        id?: string | undefined;
        inputMode?: string | undefined;
        integrity?: string | undefined;
        is?: string | undefined;
        keyParams?: string | undefined;
        keyType?: string | undefined;
        kind?: string | undefined;
        label?: string | undefined;
        lang?: string | undefined;
        list?: string | undefined;
        loading?: "eager" | "lazy" | undefined;
        loop?: boolean | undefined;
        low?: number | undefined;
        manifest?: string | undefined;
        marginHeight?: number | undefined;
        marginWidth?: number | undefined;
        max?: string | number | undefined;
        maxLength?: number | undefined;
        media?: string | undefined;
        mediaGroup?: string | undefined;
        method?: string | undefined;
        min?: string | number | undefined;
        minLength?: number | undefined;
        multiple?: boolean | undefined;
        muted?: boolean | undefined;
        name?: string | undefined;
        nonce?: string | undefined;
        noValidate?: boolean | undefined;
        open?: boolean | undefined;
        optimum?: number | undefined;
        placeholder?: string | undefined;
        playsInline?: boolean | undefined;
        poster?: string | undefined;
        preload?: string | undefined;
        radioGroup?: string | undefined;
        readOnly?: boolean | undefined;
        rel?: string | undefined;
        required?: boolean | undefined;
        role?: string | undefined;
        rows?: number | undefined;
        rowSpan?: number | undefined;
        sandbox?: string | undefined;
        scope?: string | undefined;
        scoped?: boolean | undefined;
        scrolling?: string | undefined;
        seamless?: boolean | undefined;
        selected?: boolean | undefined;
        shape?: string | undefined;
        size?: number | undefined;
        sizes?: string | undefined;
        slot?: string | undefined;
        span?: number | undefined;
        spellcheck?: boolean | undefined;
        src?: string | undefined;
        srcset?: string | undefined;
        srcDoc?: string | undefined;
        srcLang?: string | undefined;
        srcSet?: string | undefined;
        start?: number | undefined;
        step?: string | number | undefined;
        style?: string | Partial<CSSStyleDeclaration> | undefined;
        summary?: string | undefined;
        tabIndex?: number | undefined;
        target?: string | undefined;
        type?: string | undefined;
        useMap?: string | undefined;
        value?: string | number | Reactive<any> | string[] | undefined;
        volume?: string | number | undefined;
        wmode?: string | undefined;
        wrap?: string | undefined;
        about?: string | undefined;
        datatype?: string | undefined;
        inlist?: boolean | undefined;
        prefix?: string | undefined;
        property?: string | undefined;
        resource?: string | undefined;
        typeof?: string | undefined;
        vocab?: string | undefined;
        itemProp?: string | undefined;
        itemScope?: boolean | undefined;
        itemType?: string | undefined;
        itemID?: string | undefined;
        itemRef?: string | undefined;
        onLoad?: JSX.GenericEventHandler | undefined;
        onLoadCapture?: JSX.GenericEventHandler | undefined;
        onError?: JSX.GenericEventHandler | undefined;
        onErrorCapture?: JSX.GenericEventHandler | undefined;
        onCopy?: JSX.ClipboardEventHandler | undefined;
        onCopyCapture?: JSX.ClipboardEventHandler | undefined;
        onCut?: JSX.ClipboardEventHandler | undefined;
        onCutCapture?: JSX.ClipboardEventHandler | undefined;
        onPaste?: JSX.ClipboardEventHandler | undefined;
        onPasteCapture?: JSX.ClipboardEventHandler | undefined;
        onCompositionEnd?: JSX.CompositionEventHandler | undefined;
        onCompositionEndCapture?: JSX.CompositionEventHandler | undefined;
        onCompositionStart?: JSX.CompositionEventHandler | undefined;
        onCompositionStartCapture?: JSX.CompositionEventHandler | undefined;
        onCompositionUpdate?: JSX.CompositionEventHandler | undefined;
        onCompositionUpdateCapture?: JSX.CompositionEventHandler | undefined;
        onToggle?: JSX.GenericEventHandler | undefined;
        onFocus?: JSX.FocusEventHandler | undefined;
        onFocusCapture?: JSX.FocusEventHandler | undefined;
        onBlur?: JSX.FocusEventHandler | undefined;
        onBlurCapture?: JSX.FocusEventHandler | undefined;
        onChange?: ((e: import("./types").ChangeEvent<HTMLInputElement>) => void) | undefined;
        onChangeCapture?: JSX.GenericEventHandler | undefined;
        onInput?: JSX.GenericEventHandler | undefined;
        onInputCapture?: JSX.GenericEventHandler | undefined;
        onSearch?: JSX.GenericEventHandler | undefined;
        onSearchCapture?: JSX.GenericEventHandler | undefined;
        onSubmit?: JSX.GenericEventHandler | undefined;
        onSubmitCapture?: JSX.GenericEventHandler | undefined;
        onInvalid?: JSX.GenericEventHandler | undefined;
        onInvalidCapture?: JSX.GenericEventHandler | undefined;
        onReset?: JSX.GenericEventHandler | undefined;
        onResetCapture?: JSX.GenericEventHandler | undefined;
        onFormData?: JSX.GenericEventHandler | undefined;
        onFormDataCapture?: JSX.GenericEventHandler | undefined;
        onKeyDown?: JSX.KeyboardEventHandler | undefined;
        onKeyDownCapture?: JSX.KeyboardEventHandler | undefined;
        onKeyPress?: JSX.KeyboardEventHandler | undefined;
        onKeyPressCapture?: JSX.KeyboardEventHandler | undefined;
        onKeyUp?: JSX.KeyboardEventHandler | undefined;
        onKeyUpCapture?: JSX.KeyboardEventHandler | undefined;
        onAbort?: JSX.GenericEventHandler | undefined;
        onAbortCapture?: JSX.GenericEventHandler | undefined;
        onCanPlay?: JSX.GenericEventHandler | undefined;
        onCanPlayCapture?: JSX.GenericEventHandler | undefined;
        onCanPlayThrough?: JSX.GenericEventHandler | undefined;
        onCanPlayThroughCapture?: JSX.GenericEventHandler | undefined;
        onDurationChange?: JSX.GenericEventHandler | undefined;
        onDurationChangeCapture?: JSX.GenericEventHandler | undefined;
        onEmptied?: JSX.GenericEventHandler | undefined;
        onEmptiedCapture?: JSX.GenericEventHandler | undefined;
        onEncrypted?: JSX.GenericEventHandler | undefined;
        onEncryptedCapture?: JSX.GenericEventHandler | undefined;
        onEnded?: JSX.GenericEventHandler | undefined;
        onEndedCapture?: JSX.GenericEventHandler | undefined;
        onLoadedData?: JSX.GenericEventHandler | undefined;
        onLoadedDataCapture?: JSX.GenericEventHandler | undefined;
        onLoadedMetadata?: JSX.GenericEventHandler | undefined;
        onLoadedMetadataCapture?: JSX.GenericEventHandler | undefined;
        onLoadStart?: JSX.GenericEventHandler | undefined;
        onLoadStartCapture?: JSX.GenericEventHandler | undefined;
        onPause?: JSX.GenericEventHandler | undefined;
        onPauseCapture?: JSX.GenericEventHandler | undefined;
        onPlay?: JSX.GenericEventHandler | undefined;
        onPlayCapture?: JSX.GenericEventHandler | undefined;
        onPlaying?: JSX.GenericEventHandler | undefined;
        onPlayingCapture?: JSX.GenericEventHandler | undefined;
        onProgress?: JSX.GenericEventHandler | undefined;
        onProgressCapture?: JSX.GenericEventHandler | undefined;
        onRateChange?: JSX.GenericEventHandler | undefined;
        onRateChangeCapture?: JSX.GenericEventHandler | undefined;
        onSeeked?: JSX.GenericEventHandler | undefined;
        onSeekedCapture?: JSX.GenericEventHandler | undefined;
        onSeeking?: JSX.GenericEventHandler | undefined;
        onSeekingCapture?: JSX.GenericEventHandler | undefined;
        onStalled?: JSX.GenericEventHandler | undefined;
        onStalledCapture?: JSX.GenericEventHandler | undefined;
        onSuspend?: JSX.GenericEventHandler | undefined;
        onSuspendCapture?: JSX.GenericEventHandler | undefined;
        onTimeUpdate?: JSX.GenericEventHandler | undefined;
        onTimeUpdateCapture?: JSX.GenericEventHandler | undefined;
        onVolumeChange?: JSX.GenericEventHandler | undefined;
        onVolumeChangeCapture?: JSX.GenericEventHandler | undefined;
        onWaiting?: JSX.GenericEventHandler | undefined;
        onWaitingCapture?: JSX.GenericEventHandler | undefined;
        onClick?: JSX.MouseEventHandler | undefined;
        onClickCapture?: JSX.MouseEventHandler | undefined;
        onContextMenu?: JSX.MouseEventHandler | undefined;
        onContextMenuCapture?: JSX.MouseEventHandler | undefined;
        onDblClick?: JSX.MouseEventHandler | undefined;
        onDblClickCapture?: JSX.MouseEventHandler | undefined;
        onDrag?: JSX.DragEventHandler | undefined;
        onDragCapture?: JSX.DragEventHandler | undefined;
        onDragEnd?: JSX.DragEventHandler | undefined;
        onDragEndCapture?: JSX.DragEventHandler | undefined;
        onDragEnter?: JSX.DragEventHandler | undefined;
        onDragEnterCapture?: JSX.DragEventHandler | undefined;
        onDragExit?: JSX.DragEventHandler | undefined;
        onDragExitCapture?: JSX.DragEventHandler | undefined;
        onDragLeave?: JSX.DragEventHandler | undefined;
        onDragLeaveCapture?: JSX.DragEventHandler | undefined;
        onDragOver?: JSX.DragEventHandler | undefined;
        onDragOverCapture?: JSX.DragEventHandler | undefined;
        onDragStart?: JSX.DragEventHandler | undefined;
        onDragStartCapture?: JSX.DragEventHandler | undefined;
        onDrop?: JSX.DragEventHandler | undefined;
        onDropCapture?: JSX.DragEventHandler | undefined;
        onMouseDown?: JSX.MouseEventHandler | undefined;
        onMouseDownCapture?: JSX.MouseEventHandler | undefined;
        onMouseEnter?: JSX.MouseEventHandler | undefined;
        onMouseEnterCapture?: JSX.MouseEventHandler | undefined;
        onMouseLeave?: JSX.MouseEventHandler | undefined;
        onMouseLeaveCapture?: JSX.MouseEventHandler | undefined;
        onMouseMove?: JSX.MouseEventHandler | undefined;
        onMouseMoveCapture?: JSX.MouseEventHandler | undefined;
        onMouseOut?: JSX.MouseEventHandler | undefined;
        onMouseOutCapture?: JSX.MouseEventHandler | undefined;
        onMouseOver?: JSX.MouseEventHandler | undefined;
        onMouseOverCapture?: JSX.MouseEventHandler | undefined;
        onMouseUp?: JSX.MouseEventHandler | undefined;
        onMouseUpCapture?: JSX.MouseEventHandler | undefined;
        onSelect?: JSX.GenericEventHandler | undefined;
        onSelectCapture?: JSX.GenericEventHandler | undefined;
        onTouchCancel?: JSX.TouchEventHandler | undefined;
        onTouchCancelCapture?: JSX.TouchEventHandler | undefined;
        onTouchEnd?: JSX.TouchEventHandler | undefined;
        onTouchEndCapture?: JSX.TouchEventHandler | undefined;
        onTouchMove?: JSX.TouchEventHandler | undefined;
        onTouchMoveCapture?: JSX.TouchEventHandler | undefined;
        onTouchStart?: JSX.TouchEventHandler | undefined;
        onTouchStartCapture?: JSX.TouchEventHandler | undefined;
        onPointerOver?: JSX.PointerEventHandler | undefined;
        onPointerOverCapture?: JSX.PointerEventHandler | undefined;
        onPointerEnter?: JSX.PointerEventHandler | undefined;
        onPointerEnterCapture?: JSX.PointerEventHandler | undefined;
        onPointerDown?: JSX.PointerEventHandler | undefined;
        onPointerDownCapture?: JSX.PointerEventHandler | undefined;
        onPointerMove?: JSX.PointerEventHandler | undefined;
        onPointerMoveCapture?: JSX.PointerEventHandler | undefined;
        onPointerUp?: JSX.PointerEventHandler | undefined;
        onPointerUpCapture?: JSX.PointerEventHandler | undefined;
        onPointerCancel?: JSX.PointerEventHandler | undefined;
        onPointerCancelCapture?: JSX.PointerEventHandler | undefined;
        onPointerOut?: JSX.PointerEventHandler | undefined;
        onPointerOutCapture?: JSX.PointerEventHandler | undefined;
        onPointerLeave?: JSX.PointerEventHandler | undefined;
        onPointerLeaveCapture?: JSX.PointerEventHandler | undefined;
        onGotPointerCapture?: JSX.PointerEventHandler | undefined;
        onGotPointerCaptureCapture?: JSX.PointerEventHandler | undefined;
        onLostPointerCapture?: JSX.PointerEventHandler | undefined;
        onLostPointerCaptureCapture?: JSX.PointerEventHandler | undefined;
        onScroll?: JSX.UIEventHandler | undefined;
        onScrollCapture?: JSX.UIEventHandler | undefined;
        onWheel?: JSX.WheelEventHandler | undefined;
        onWheelCapture?: JSX.WheelEventHandler | undefined;
        onAnimationStart?: JSX.AnimationEventHandler | undefined;
        onAnimationStartCapture?: JSX.AnimationEventHandler | undefined;
        onAnimationEnd?: JSX.AnimationEventHandler | undefined;
        onAnimationEndCapture?: JSX.AnimationEventHandler | undefined;
        onAnimationIteration?: JSX.AnimationEventHandler | undefined;
        onAnimationIterationCapture?: JSX.AnimationEventHandler | undefined;
        onTransitionEnd?: JSX.TransitionEventHandler | undefined;
        onTransitionEndCapture?: JSX.TransitionEventHandler | undefined;
    }) => JSX.Element | null;
    Reactive: typeof Reactive;
};
declare global {
    let LampJs: typeof exportObj;
}
export default exportObj;
export * from "./lampjs";
export type { ChangeEvent } from "./types";
