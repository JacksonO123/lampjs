/// <reference types="node" />
import { Config, Meta } from '@vercel/build-utils';
import { ChildProcess } from 'child_process';
export declare function forkDevServer(options: {
    tsConfig: any;
    config: Config;
    maybeTranspile: boolean;
    workPath: string | undefined;
    isTypeScript: boolean;
    isEsm: boolean;
    require_: NodeRequire;
    entrypoint: string;
    meta: Meta;
    /**
     * A path to the dev-server path. This is used in tests.
     */
    devServerPath?: string;
}): ChildProcess & {
    pid: number;
};
/**
 * When launching a dev-server, we want to know its state.
 * This function will be used to know whether it was exited (due to some error),
 * or it is listening to new requests, and we can start proxying requests.
 */
export declare function readMessage(child: ChildProcess): Promise<{
    state: 'message';
    value: {
        port: number;
    };
} | {
    state: 'exit';
    value: [number, string | null];
}>;
